{"ast":null,"code":"var _jsxFileName = \"/Users/wuyubao/Desktop/vscode-web/React-app/react-blog/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './singlePost.css';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split('/')[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get('/posts/' + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      const res = await axios.delete('/posts/' + path, {\n        data: {\n          username: user === null || user === void 0 ? void 0 : user.username\n        }\n      });\n      window.location.replace('/');\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put('/posts/' + path, {\n        data: {\n          username: user.username,\n          title,\n          desc\n        }\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: e => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 151\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author: \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 118\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 64\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 138\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"kTyxi2vkQntZDH19m6HdEjEXHY4=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/wuyubao/Desktop/vscode-web/React-app/react-blog/client/src/components/singlePost/SinglePost.jsx"],"names":["useLocation","useEffect","useState","axios","Link","Context","useContext","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { useLocation } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './singlePost.css';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport { useContext } from 'react';\n\nexport default function SinglePost() {\n    const location = useLocation();\n    const path = location.pathname.split('/')[2];\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:5000/images/\";\n    const { user } = useContext(Context)\n\n    const [title, setTitle] = useState('');\n    const [desc, setDesc] = useState('');\n    const [updateMode, setUpdateMode] = useState(false);\n\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get('/posts/' + path);\n            setPost(res.data);\n            setTitle(res.data.title);\n            setDesc(res.data.desc);\n        };\n\n        getPost();\n    }, [path])\n\n    const handleDelete = async () => {\n        try {\n            const res = await axios.delete('/posts/' + path, { data: { username: user?.username } });\n            window.location.replace('/');\n        } catch (err) {\n\n        }\n    }\n\n    const handleUpdate = async () => {\n        try {\n            await axios.put('/posts/'+path,{data:{\n                username:user.username,\n                title,\n                desc\n            }});\n        } catch (err) {\n            \n        }\n    }\n\n    return (\n        <div className='singlePost'>\n            <div className=\"singlePostWrapper\">\n                {post.photo && (\n                    <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\n                )}\n\n                {updateMode ? (<input type=\"text\" value={title} className='singlePostInput' autoFocus onChange={e => setTitle(e.target.value)} />) : (<h1 className=\"singlePostTitle\">\n                    {post.title}\n                    {post.username === user?.username && (\n                        <div className=\"singlePostEdit\">\n                            <i className=\"singlePostIcon far fa-edit\" onClick={e => setUpdateMode(true)}></i>\n                            <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\n                        </div>\n                    )}\n\n                </h1>)}\n\n\n                <div className=\"singlePostInfo\">\n                    <span className='singlePostAuthor'>Author: <Link to={`/?user=${post.username}`} className='link'><b>{post.username}</b></Link> </span>\n                    <span className='singlePostDate'>{new Date(post.createdAt).toDateString()}</span>\n                </div>\n\n                {updateMode ? <textarea className='singlePostDescInput' value={desc} onChange={e=>setDesc(e.target.value)}></textarea> : <p className='singlePostDesc'>\n                    {post.desc}\n                </p>}\n\n                <button className='singlePostButton' onClick={handleUpdate}>update</button>\n\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}